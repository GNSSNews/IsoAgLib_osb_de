/*! \page PageTechInfo Technical Information

INCLUDE_doc/txt/mainHeaderWithNavbar.txt_INCLUDE

<table class="infobox" border="0">
<tr><th>Section Overview</th></tr>
<tr><td>The following parts are described on the respective pages:
    <ul>
    <li> \ref InfGeneralInformation </li>
    <li> \ref InfAgentNetwork </li>
    <li> \ref InfServiceNetwork </li>
    </ul>
</td></tr>
</table>

<div style="clear:left"></div>

\section InfGeneralInformation General Information
The \isoaglib was primarily developed for massive automatic process data recording within the research group
<a href="http://www.tec.wzw.tum.de/pflanztech/englisch/forschung/forschung.html">IKB-D&uuml;rnast</a>
. Since publication of this project it is used for:
	- Implement Indicator (IMI) which detects working state dependent on configuration and tractor base
    data information (LBS-Base) and records process data:
		- working state
		- working width
		- working time
		- working distance
		- working area
		- whole time
		- whole distance
	- IMI for transport work, where no working width and area are point of interest
	- simulated tractor which sets LBS-Base data according to settings of analog sensor inputs
    and sends them on BUS, and which manages measuring programs for IMIs dependent on digital inputs (switch)
- Task Controller which retrieves GPS information from a Fieldstar (TM) terminal, combines them
    with dynamic detected process data of pre configured IMI types and polls the information
		via RS232 to a PC or PCMCIA Flashdisk in simple table format. Last but not least it measures the hitch force
		(with sensors of EHR) and the fuel consumption and polls them, too. The Task Controller
		detects dependent on GPS, if the actual position is in one of the configured (EEPROM)
		areas of type mounting, transport or field. With this it can gather the information
		for each area type in its own subset.

The <b>main basic design principles</b> of the \isoaglib are:
	- use Hardware-Adaptation-Layer to restrict hardware dependent parts, to
    ease adaptation to different ECU types
	- use hardware independent Communication-Layer, which implements all interaction via ISO11783
	- very capable and flexible "Licensing"design -&gt; e.g. it can handle received setpoints from a group of
    different senders, so that the main application can decide, which sender to accept
	- modularized structure to ease source code administration and to enable de/activation of
    specific function groups (e.g. RS232, sensor, actor)

The \isoaglib version <b>1.0.0rc1</b> was running stable already and has been used for the
<a href="http://www.fritzmeier.com/engl/frameset_engl.htm?/engl/environment/environment_miniveg.htm">Chlorophyll Sensor MiniVeg N</a>
of the manufacturer <a href="http://www.fritzmeier.de">Fritzmeier</a>. It was verified with automated tests, that the final device
is fitting to all defined requirements and therefore the \isoaglib did at least provide a robust correct function for this application.

In case the \isoaglib would suffer some problems for other applications, you can be sure that the author
<a href="mailto:Achim.Spangler_at_osb-ag:de">Achim Spangler</a> maintains this project actively.

\section InfAgentNetwork Modelling as Network of Autonomous Agents

The targeted flexible network, where devices of different manufacturers,
models and built years are providing and using general services can be seen
as a network of partial autonomous agents. K&uuml;hnel establishes the following
criteria for the use of agents in the view of the whole system (book: "Agentenbasierte
Softwareentwicklung", A.: Ralf K&uuml;hnel, V.: Addison-Wesley):
- inherent&nbsp;distribution of data, competence and leadership
- existence&nbsp;of specific software for sub tasks which should be integrated
- complexity of algorithms which could be subdivided in distributed parts
- tough or impossible design of global control
Criteria for the modelling as agents are in the view of the single devices:- need for adaptation to frequently changing environments
- partial and possibly erroneous information about environment
- restricted prediction of environment
- possibility of environment&nbsp;changes which are only partially induced  by own activities
This matches the following properties of an ISO 11783 network:
- single devices (resp. their ECU) must have the competence and leadership for security relevant tasks
- controller software for single devices exists in many cases
- manufacturer of a device knows best, how construction independent information and work services can be realized by a specific machine
- global control would need a steadily increasing configuration management database to allow any desired combination of devices
- frequently change of the (network) environment
- a single implement or the tractor can't predict or control the work of the whole work combination
Therefore the \isoaglib provides the following services:<br>

<b>Knowledge Management System</b>
-# application can simply store and update local process data information
-# optional&nbsp;periodic store of actual value in EEPROM<br>
-# periodic or one time information requests from remote devices are handled in the background
-# capable support for one time or periodic information request (including request of MIN or MAX on specific trigger events)
-# several remote devices can independently reset the stored
   value, if they have registered a measuring program (time or distance proportional
   or value dependent triggered sending of values)<br>
-# process data can be flexible created or deleted during runtime to adapt to actual information needs
-# all information types are handled with the same API
-# each information type (e.g. application rate) is addressed by an unique identifier
   which contains the device type (e.g. spreader), mounting position and location
   in the device specific dictionary so that dynamic source address or protocol
   type (ISO 11783) is irrelevant for the application design<br></td></tr>

<b>Control Interaction</b>
-# API of each process data has subgroups for measurement information and work control
-# setpoints can be defined as exact values, MIN or MAX limits or intervals<br>
-# information if sent setpoint was answered with accept or reject (differentiated by reason)
-# information if previously rejected setpoint is still consistent with the actual measurement value<br>
-# parallel received setpoints for the same process data are distinguished by sender
   ident, so that selective accept and reject is possible
-# accepted setpoint sender is marked as MASTER, so that
   succeeding setpoints of the MASTER can be distinguished from setpoints of
   other devices
-# optional automatic information of setpoint MASTER, if actual measurement value exceeds the configurable admissible tolerance

\section InfServiceNetwork Service Network
The interactions between the devices of a ISO 11783 network can be modelled as
the providing and using of construction  independent services. This is illustrated
with the following diagrams.<br>
\image html Diagramme/service_network_connection.png
&nbsp;<br>
&nbsp;<br>
&nbsp;<br>

The devices of this network are using and providing services as process data. The correct function of the elements is only
possible, if no device is dependent on a service of another not existent device.
<br clear="All">
<hr>
\image html Diagramme/service_network_conflict.png
&nbsp;<br>
&nbsp;<br>
&nbsp;<br>Resource conflicts can occur, if several devices want to control the driving speed and RPM of PTO of the tractor.
Therefore each implement should avoid the sending of exact setpoints in favour of intervals.

<br clear="All">
<hr>
\image html Diagramme/service_network_flexibility.png
&nbsp;<br>
&nbsp;<br>
Several implements which want to control the work of the tractor are no problem, if they define intervals instead of
exact values. Additionally they should use process data which is as abstract as possible. <br>
The rotary harrow could define setpoints for driving speed and PTO (power take-off) of the tractor, so that the tractor would be fixed very tight to the needs
of this one implement. This wouldn't allow the fertilizer to control the driving speed.<br>
<br>
If the rotary harrow defines alternatively the relation between driving speed and PTO, the tractor can realize this
setting for different speeds (dependent on the transmission of the tractor). The tractor can
regard the setpoint from the fertilizer in this case.

*/
