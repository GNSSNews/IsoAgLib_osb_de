/*! \page PageAdditionalInfo Additional Information

INCLUDE_doc/txt/mainHeaderWithNavbar.txt_INCLUDE

<table class="infobox" border="0">
<tr><th>Section Overview</th></tr>
<tr><td>The following parts are described on the respective pages:
<ol type="I">
    <li>\ref PageDeveloperInfo "Developer Information Page"
        <ul><li> \ref WhereToStart 
    <ul><li> \ref StartToLearn </li>
        <li> \ref DocOverview </li>
        <li> \ref GettingHelp </li>
    </ul>
    </li>
        <li> \ref MemoryUsage </li>
        </ul>
    </li>
    <li> Additional Information </li>
    <li> \ref PageChanges "Changelog" </li>
    <li> \ref PageTodo "Main TODO Items Page"</li>
</ol>
</td></tr>
</table>
<div style="clear:left"></div>

<!--This page contains additional information on some topics that needed to be included but would bloat the specific parts of the documentation.-->

\section CanServerApp CAN Server
The CAN server is available for PC (target: pc_linux, pc_win32) and allowes communication between several \isoaglib applications
on the same host PC (with or without connection to a physical CAN bus).
Each application can access the CAN bus via the CAN server app.

In the current version there is no need for \isoaglib applications to communicate directly with the CAN devices
(like in \isoaglib v1).
They just use a socket or message queue interface to the CAN server. All CAN device dependency has been moved into the CAN server.

The CAN server application comes in two different variants regarding the communication to the clients:
- message queue (only available for Linux systems)
- socket (Linux and Windows)

For supporting the different CAN devices different CAN server project files and binaries are provided (see ScriptIntegrateWin32Can):
- Dev-C++ project files:<br> 
  - <tt>examples\\compiler_projects\\Dev-C++\\canserver\\can_server.dev</tt>
  - <tt>examples\\compiler_projects\\Dev-C++\\canserver\\can_server_pcan.dev</tt>
  - <tt>examples\\compiler_projects\\Dev-C++\\canserver\\can_server_sontheim.dev</tt>
  - <tt>examples\\compiler_projects\\Dev-C++\\canserver\\can_server_vector.dev</tt>
  - <tt>examples\\compiler_projects\\Dev-C++\\canserver\\can_server_vector_xl.dev</tt>
- Visual-Studio (2005) project files:
  - <tt>examples\\compiler_projects\\VC8\\canserver\\can_server.vcproj</tt>
  - <tt>examples\\compiler_projects\\VC8\\canserver\\can_server_pcan.vcproj</tt>
  - <tt>examples\\compiler_projects\\VC8\\canserver\\can_server_sontheim.vcproj</tt>
  - <tt>examples\\compiler_projects\\VC8\\canserver\\can_server_vector.vcproj</tt>
  - <tt>examples\\compiler_projects\\VC8\\canserver\\can_server_vector_xl.vcproj</tt>
- Dev-C++ binaries:<br> 
  - <tt>examples\\compiler_projects\\Dev-C++\\canserver\\bin\\can_server.exe</tt>
  - <tt>examples\\compiler_projects\\Dev-C++\\canserver\\bin\\can_server_pcan.exe</tt>
  - <tt>examples\\compiler_projects\\Dev-C++\\canserver\\bin\\can_server_sontheim.exe</tt>
  - <tt>examples\\compiler_projects\\Dev-C++\\canserver\\bin\\can_server_vector.exe</tt>
  - <tt>examples\\compiler_projects\\Dev-C++\\canserver\\bin\\can_server_vector_xl.exe</tt>
- Visual-Studio (2005) binaries:
  - <tt>examples\\compiler_projects\\VC8\\canserver\\bin\\can_server.exe</tt>
  - <tt>examples\\compiler_projects\\VC8\\canserver\\bin\\can_server_pcan.exe</tt>
  - <tt>examples\\compiler_projects\\VC8\\canserver\\bin\\can_server_sontheim.exe</tt>
  - <tt>examples\\compiler_projects\\VC8\\canserver\\bin\\can_server_vector.exe</tt>
  - <tt>examples\\compiler_projects\\VC8\\canserver\\bin\\can_server_vector_xl.exe</tt>

Installation and creation of the can_server application is described on the \ref ScriptIntegrateWin32Can "installation page".


\subsection CanServerUsage CAN Server Usage
To see all available command line switches of <tt>can_server</tt>/<tt>can_server.exe</tt>, run it with <tt>--help</tt> as parameter.

*/
