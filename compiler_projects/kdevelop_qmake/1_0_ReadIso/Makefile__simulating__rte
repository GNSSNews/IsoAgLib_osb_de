#############################################################################
# Makefile for building: 1_0_ReadIso
# Project:               1_0_ReadIso
#############################################################################

####### Project specific variables
TARGET = 1_0_ReadIso
ISOAGLIB_PATH = ../../..
APP_INC = -I../../../IsoAgLib_Examples/tutorial/1_BaseData/1_0_ReadIso 
####### Include a version definition file into the Makefile context - when this file exists
-include versions.mk

BIOS_LIB = /usr/local/lib/librte_client.a /usr/local/lib/libfevent.a
BIOS_INC =
PROJ_DEFINES = $(VERSION_DEFINES) -DSYSTEM_PC -DPRJ_USE_AUTOGEN_CONFIG=config_1_0_ReadIso.h


####### Definition of compiler binary prefix corresponding to selected target
COMPILER_BINARY_PRE = 


first: all

####### Files
SOURCES = ../../../xgpl_src/IsoAgLib/comm/SystemMgmt/impl/identitem_c.cpp  \
		../../../xgpl_src/IsoAgLib/comm/SystemMgmt/impl/baseitem_c.cpp  \
		../../../xgpl_src/IsoAgLib/comm/SystemMgmt/impl/istate_c.cpp  \
		../../../xgpl_src/IsoAgLib/comm/SystemMgmt/ISO11783/impl/isosystempkg_c.cpp  \
		../../../xgpl_src/IsoAgLib/comm/SystemMgmt/ISO11783/impl/isomonitor_c.cpp  \
		../../../xgpl_src/IsoAgLib/comm/SystemMgmt/ISO11783/impl/isorequestpgn_c.cpp  \
		../../../xgpl_src/IsoAgLib/comm/SystemMgmt/ISO11783/impl/isoitem_c.cpp  \
		../../../xgpl_src/IsoAgLib/comm/SystemMgmt/ISO11783/impl/isoname_c.cpp  \
		../../../xgpl_src/IsoAgLib/comm/Scheduler/impl/scheduler_c.cpp  \
		../../../xgpl_src/IsoAgLib/util/impl/canpkgext_c.cpp  \
		../../../xgpl_src/IsoAgLib/util/impl/canpkg_c.cpp  \
		../../../xgpl_src/IsoAgLib/util/impl/cancustomer_c.cpp  \
		../../../xgpl_src/IsoAgLib/util/impl/util_funcs.cpp  \
		../../../xgpl_src/IsoAgLib/util/liberr_c.cpp  \
		../../../xgpl_src/supplementary_driver/driver/datastreams/volatilememory_c.cpp  \
		../../../xgpl_src/IsoAgLib/comm/Base/impl/tracgeneral_c.cpp  \
		../../../xgpl_src/IsoAgLib/comm/Base/impl/tracpto_c.cpp  \
		../../../xgpl_src/IsoAgLib/comm/Base/impl/tracmove_c.cpp  \
		../../../xgpl_src/IsoAgLib/comm/Base/impl/basecommon_c.cpp  \
		../../../xgpl_src/IsoAgLib/comm/Base/impl/timeposgps_c.cpp  \
		../../../xgpl_src/IsoAgLib/comm/Base/ext/impl/traclight_c.cpp  \
		../../../xgpl_src/IsoAgLib/comm/Base/ext/impl/tracptosetpoint_c.cpp  \
		../../../xgpl_src/IsoAgLib/comm/Base/ext/impl/tracaux_c.cpp  \
		../../../xgpl_src/IsoAgLib/comm/Base/ext/impl/tracmovesetpoint_c.cpp  \
		../../../xgpl_src/IsoAgLib/comm/Base/ext/impl/traccert_c.cpp  \
		../../../xgpl_src/IsoAgLib/comm/Base/ext/impl/tracguidance_c.cpp  \
		../../../xgpl_src/IsoAgLib/comm/Base/ext/impl/tracguidancecommand_c.cpp  \
		../../../xgpl_src/supplementary_driver/hal/pc/rs232/target_extension_rs232_rte.cpp  \
		../../../xgpl_src/supplementary_driver/driver/rs232/impl/rs232io_c.cpp  \
		../../../xgpl_src/IsoAgLib/hal/pc/can/target_extension_can_simulating.cpp  \
		../../../xgpl_src/IsoAgLib/hal/pc/can/hal_can_interface.cpp  \
		../../../xgpl_src/IsoAgLib/hal/pc/system/system_target_extensions.cpp  \
		../../../xgpl_src/IsoAgLib/driver/can/impl/filterbox_c.cpp  \
		../../../xgpl_src/IsoAgLib/driver/can/impl/msgobj_c.cpp  \
		../../../xgpl_src/IsoAgLib/driver/can/impl/ident_c.cpp  \
		../../../xgpl_src/IsoAgLib/driver/can/impl/canio_c.cpp  \
		../../../xgpl_src/IsoAgLib/driver/system/impl/system_c.cpp  \
		../../../IsoAgLib_Examples/tutorial/1_BaseData/1_0_ReadIso/1_0_ReadIso.cpp  

####### Some Standard Rules
CC       = $(COMPILER_BINARY_PRE)gcc
CXX      = $(COMPILER_BINARY_PRE)g++
STRIP	 = $(COMPILER_BINARY_PRE)strip
LEX      = flex
YACC     = yacc
CFLAGS   = -pipe -Wall -W -g -fno-builtin -Wall -Woverloaded-virtual -Wpointer-arith $(PROJ_DEFINES)
CXXFLAGS = -pipe -Wall -W -g -fno-builtin -Wall -Woverloaded-virtual -Wpointer-arith $(PROJ_DEFINES)
LEXFLAGS =
YACCFLAGS= -d
INCPATH  = -I. -I$(ISOAGLIB_PATH)/xgpl_src $(APP_INC) $(BIOS_INC)
LINK     = $(COMPILER_BINARY_PRE)g++
LFLAGS   =
LIBS     = $(SUBLIBS)  $(BIOS_LIB)
AR       = ar cqs
RANLIB   =
TAR      = tar -cf
GZIP     = gzip -9f
COPY     = cp -f
COPY_FILE= $(COPY)
COPY_DIR = $(COPY) -r
INSTALL_FILE= $(COPY_FILE)
INSTALL_DIR = $(COPY_DIR)
DEL_FILE = rm -f
SYMLINK  = ln -sf
DEL_DIR  = rmdir
MOVE     = mv -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p

####### Output directory

OBJ_DIR  = objects

####### Build Rules

OBJECTS = $(patsubst %.cpp,$(OBJ_DIR)/%.o,$(notdir $(SOURCES)))
DEPS := $(patsubst %.o,%.d,$(OBJECTS))

# $(OBJ_DIR)/%.d :
# 	$(CXX) -c $(CXXFLAGS) $(INCPATH) -MM -MT $(patsubst %.d,%.o,$@)  $(filter %/$(patsubst $(OBJ_DIR)/%.d,%,$@).cpp,$(SOURCES)) > $@

$(OBJ_DIR)/%.d :
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -MM $(filter %/$(patsubst $(OBJ_DIR)/%.d,%,$@).cpp,$(SOURCES)) 2>/dev/null | \
	perl -p -e 's!^([^:]+:)!$(OBJ_DIR)/$$1!' > $@

include $(DEPS)

####### Implicit rules

.SUFFIXES: .c .o .cpp .cc .cxx .C

$(OBJ_DIR)/%.o : $(filter %/$(patsubst $(OBJ_DIR)/%.d,%,$@).cpp,$(SOURCES)) $(OBJ_DIR)/%.d
	$(CXX) $(CXXFLAGS) $(INCPATH)  -o $@ -c $(filter %/$(patsubst $(OBJ_DIR)/%.o,%,$@).cpp,$(SOURCES))

####### Build rules
deps : $(DEPS)

all: Makefile $(TARGET)
$(TARGET):  $(OBJECTS)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS)

dist:
	@mkdir -p objects/$(TARGET) && $(COPY_FILE) --parents $(SOURCES) $(HEADERS) $(FORMS) $(DIST) objects/$(TARGET)/ && ( cd `dirname objects/$(TARGET)` && $(TAR) vtserver_rte.tar vtserver_rte && $(GZIP) vtserver_rte.tar ) && $(MOVE) `dirname objects/vtserver_rte`/vtserver_rte.tar.gz . && $(DEL_FILE) -r objects/vtserver_rte

yaccclean:
lexclean:
clean:
	-$(DEL_FILE) $(OBJECTS) $(DEPS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) $(TARGET)


FORCE:

####### Compile


####### Install

install:

uninstall:

