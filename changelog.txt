/*! \page PageChanges Changelog of IsoAgLib


INCLUDE_doc/txt/mainHeaderWithNavbar.txt_INCLUDE

<table class="infobox" border="0">
<tr><th>Section Overview</th></tr>
<tr><td>The following parts are described on the respective pages:
<ol type="I">
    <li>\ref PageDeveloperInfo "Developer Information Page"
        <ul><li> \ref WhereToStart 
    <ul><li> \ref StartToLearn
        <li> \ref DocOverview </li>
        <li> \ref GettingHelp </li>
    </ul>
    </li>
        <li> \ref MemoryUsage </li>
        </ul>
    </li>
    <li> Changelog </li>
    <li> \ref PageTodo "Main TODO Items Page"</li>
    <!--<li> \ref PageAdditionalInfo </li>-->
</ol>
</td></tr>
</table>
<div style="clear:left"></div>

\section Changes Changes

\subsection Change_O 2.0 to 2.1
  - Network Management regarding SA-changes and SA-conflicts and IState rewritten, also SaClaimHandler
  - interface iSchedulerTask_c for IsoAgLib scheduler added
  - VT object pools: vt2iso now decides automatically which classes are necessary (smaller client size)
  - Process data: GeneralCommand_c renamed to ProcessCmd_c
  - bug fix in ManageMeasureProgLocal_c::timeEvent(): reset mpc_progCache after erase
  - vt-client: now no more overwriting in queue on ChangeActiveMask command
  - ManageMeasureProgLocal_c::insertMeasureprog() rewritten
  - remove DIN specific enum progType_t, use instead new flag mb_active in ProcessElementBase_c
  - Modified the constructor of AddressResolveResults_c to have a correct instantiation on embedded target of a static object
  - introduce new functions Ident_c::setWord() (set a uint16_t part of the identifier at once) and CanPkgExt_c::setIsoDpPf()
  - use MALLOC_TEMPLATE \#define, which can be defined individual for compiler in compiler_adaption.h
  - changes when more than one protocol instances are used (singletonVecKey, ...) 
  - MultiReceive filter-cleanup (removed manual 8dlc-check, added missing deleteFilter, adapted insertFilter)
  - new naming scheme (m-prefix for member-variables, ...)
  - ProcIdent_c and all derived classes (local and remote): parameter c_ownerISOName removed from init() and constructor
  - changed handling of received process data messages (first local then remote check)
  - usage of fast datatypes in cases where an integer variable only needs a specific minimum size (HANDLE_FAST_DATATYPE_AS_STRICT)
  - optional global mutex in Scheduler_c so that an application can have several parallel threads with access to the IsoAgLib data structures
  - the IsoAgLib core files ( "xgpl_src" "commercial_BIOS" and simulated_IO") have been moved together in a new folder "library"
  - some important folders and files have been renamed so the content should be easier to identify
    - folders below IsoAgLib/comm are now labeled like the related OSI layer
    - IsoAgLib_Examples -> examples with a new folder "src" inside containing the source files
    - Binaries like vt2iso and proc2ito are now being compiled to the new folder "bin".
    - compiler_projects has been moved into "examples" containing the config files of the examples.
    - The folder "build_utils" has been renamed to "build" and moved to library/xgpl_src/build
    - The class "ElementBase_c" has been renamed to "SchedulerTask_c" and moved to folder "Scheduler", like "CanPkExt_c" as well.
    - The classes "CanCustomer_c" and "CanPkg_C" have been moved to folder "/driver/can"
  - optimized scheduler resorting to avoid several HEAP malloc/free calls
  - added new DEFINEs for MultiReceive: refer to new generated config_xxx.h or isoaglib_config.h
  - vt2iso: special parsing of proprietary elements and attributes possible
  - bug fix in Scheduler_c::resortTaskList(): task list resorting corrected
  - added language-auto-detection to vt2iso
  - added support for Auxiliary Assignment and passing the AuxInputStatus message to the application
  - added functionality to Base-Classes to suppress PGNs using a bitmask
  - bug fix: Address-Claim now also sent out after the 250ms-period if requested in this 250ms-period
  - introduce new target hardware: AMS5 of ECU manufacturer Gesas
  - avoid any multiple inheritance in IsoAgLib
  - change HAL modules for PC-RTE so that they read the RTE server name from standard environment variable RTE_HOST
  - class names match now a strict camel case pattern (e.g. ISOMonitor_c renamed to IsoMonitor_c)
  - bug fix: replacement of the first item in VT-Client CommandQueue for replacement corrected
  - bug fix: devpropertyhandler corrected (incoming command-responses on ChangeDesignator)
  - new WorkingSet announce strategy: no more automatic announce on Address-Claim
  - can_server now with socket interface (Windows and Linux) and message queues (Linux only) with common CAN device extensions (PEAK can card, A1, Sontheim, ...)
  - Central CAN FIFO, so that the BIOS/OS doesn't need to provide individual FIFOs for each receive MsgObj
  - bug fix: use rc_isoTerminal.data().time() instead of HAL::getTime() in VtServerInstance
  - bug fix: VtServerInstance uses getLastProcessedCanPkgTime() now for detecting dropp offs
  - Get-functions can now be enabled in config files when needed (see \ref EnableGetterFunctions)

\subsection Change_N 2.0 (changes on maintained version)
  - rewritten and enhanced TimePosGps_c
  - use isUnspecified() for ISOName instead of 0xff
  - avoid STL container list method call, as at least std::list<T>::size() works very slow
  - use slist only for compiler, where its support is known: GCC and Tasking
  - introduce new target hardware: Dickey John standard platform
  - added OutputList to vt2iso and ISO_Terminal (will be there in VT Revision 3)
  - added SendPriority feature to can_server
  - new ISOName_c constructor with just DEV-CLASS as parameter
  - VtClientServerCommunication_c: fix for dequeueing commands if list is empty
  - add PWM handling on ESX Babyboard (from old IsoAgLib pre-2.0 tree) and some PWM/Digout_c HAL fixes
  - can_server: avoid sending of CAN messages when destination address is one of the local clients
  - vt2iso: enable live editing
  - bug fix in hal_can_interface: send buffer overflow during pool upload
  - inserted send/receive of Vt_Server Phase3 message Lock/Unlock Mask
  - handling of display activation message (iIsoTerminalObjectPool_c::eventDisplayActivation())
  - improved ISOMonitor_c::unifyIsoISOName() when there's a conflict on the ISOBUS
  - fixed endless loop in xgpl_src/IsoAgLib/util/impl/util_funcs.h's convertLittleEndi...
  - fixed FASTPACKET sendIsoFastPacketBroadcast
  - changed ISONameUnspecified from static to ISONameUnspecified() function (problem with static (singleton) classes)
  - buffering of targetfilestreaminput to speed up byte by byte reading (activate with USE_BUFFERED_READ define)
  - bug fix in ISOMonitor_c::sendRequestForClaimedAddress() to ensure correct timing in address claim sequence
  - bug fix in ISOTerminal_c::init() to avoid problems (not seen VTs) when ISOTerminal_c::init() is being called too late
  - fix wrong handling of std::list<T>::erase() in canio_c.cpp
  - fixed TIMEOUT values in vtclientservercommunication_c.cpp
  - fix scheduler handling when a task got into negative area
  - Added feature for MultiReceive to set the time-period to 5000 when nothing to do
  - bug fix in MeasureProgLocal_c::processMsg(): use current value for processMeasurementReset() call
  - better strategy for not interrupting important and short timeEvent() triggered actions
  - added function for hide/show of a container with direct UID usage


\subsection Change_M 1.2.2(unofficial) to 2.0
  - removed DIN-related code, adapted proc2iso and rebuild all tutorials and their device descriptions
  - removed following folders and classes:
          IsoAgLib/comm/DIN_Terminal
          IsoAgLib/comm/Part7_ProcessData/igps_c.h
          IsoAgLib/comm/Part7_ProcessData/impl/gps_c.cpp
          IsoAgLib/comm/Part7_ProcessData/impl/gps_c.h
          IsoAgLib/comm/Part5_NetworkManagement/DIN9684
  - removed DIN-related tutorials:
          0_1_AddressClaimDin
          0_2_AddressClaimFlexible
          0_4_LookupDin
          1_1_ReadDin
          1_3_WriteDin
          1_5_WriteFlexibleDin
          3_1_LBSTerminalDin
  - removed the no more needed conf-files in projectGeneration/
  - removed IsoAgLib/comm/Part5_NetworkManagement/impl/monitoritem_c.cpp
            IsoAgLib/comm/Part5_NetworkManagement/impl/monitoritem_c.h
    and adapted all affected classes
  - removed IsoAgLib/comm/Part5_NetworkManagement/impl/systemmgmt_c.cpp
            IsoAgLib/comm/Part5_NetworkManagement/impl/systemmgmt_c.h
            IsoAgLib/comm/Part5_NetworkManagement/isystemmgmt_c.h
    and replaced all missing function calls with appropriate function calls from the IsoMonitor_c
  - partly renaming of IsoMonitor_c functions
  - removed var2empfSend() and replaced with sendValDevKey() in ProcDataLocalBase_c and ProcDataRemoteBase_c
  - added LibErr_c::good() for test on errLocation AND errType
  - updated proc2iso documentation
  - MultiSend rewritten to use ISOName instead of SA
  - removed classes devKey_c.h and idevKey_c and replaced this classes by isoname_c.h/iisoname_c.h
  - cleanup of LibErr_c
  - enhancement and cleanup of process data
  - big cleanup of IdentItem_c , as no more dual use for DIN9684 and ISO11783
  - fixed INTERNAL/EXTERNAL debug-device use
  - all interface class do now strictly derive <b>private</b> from the internal base class, so that no application can
    access internal items by accident without directly refering to internal class
  - optimize merging of CAN receive filters to get more selective CAN message receive
  - Fixed Font-Downscaling. Now using more generic, simple (and faster) scaling.
  - Avoid compile errors with stricter checking c++ compilers
  - vt2iso now utilizing color-palette of BMP files. If BMP is palettized, it HAS to have the correct ISO-palette now. NOT supported by PAINTLIB wrapper class RIGHT NOW.
     --> Please use FREEIMAGE for now.
  - <i>ISO VT Revision 3</i>: getAttribute() , new Button styles , select input focus command can activate input dialog on demand
  - Added HUGE_MEM for objects now, too. (Not only PictureGraphic-RAW-Data anymore now)
  - <i>proc2iso</i>: do not add _"Nr" to DPD designator if only one DeviceProcessDataCombination is defined
  - change problematic source codes (esp. too big inline functions) which were indicated by the stricter warning level of gcc
  - add sending of Broadcast-TP with iMultiSendStreamer_c
  - add parallel receive of Broadcast-TP to FastPacket, so that all flavours of NMEA2000 senders should be matched by TimePosGps_c,
    the sending of FastPacket can be controlled with <tt>\#define SEND_NMEA2000_FAST_PACKET</tt>
  - add IsoFilterBox_c to define receive filters based on ISONAME instead of SA
  - Now only enqueueing commands if pool is already uploaded
  - get support for PEAK CAN cards at Linux development hosts
  - integrate option to add application specific include paths in conf_xy file

\subsection Change_L 1.2.1 to 1.2.2(unofficial)

  - support for proc2iso XML schema: new mandatory parameter -s=xxx.xsd for personalized path to xsd-file (see proc2iso --help).
    former only -s with a default path
  - support for processdata designators up to 30 chars to enable a differentiation between the deviceprocessdatacombination (DDI groups)
  - added special class IsoRequestPgn_c to answer REQUEST_PGN_MSG_PGN appropriate if any other class registered for that filter could not answer

\subsection Change_K 1.2.0 to 1.2.1

	- fixes for Win32 RS232 HAL
	- added the hook function eventVtStatusMsg() that gets called immediately after recognizing an incoming VT status message
	- fix compilation problems for cases with more than one protocoll instance
	- project generation can now selectively incorporate tractor information subgroup classes, enhance the tractor information bases classes
	- implemented possibility to change ISONAME of a device during runtime for DeviceDescription upload to TaskController
	- Added explicit MultiPacket enabling in update_makefile.sh. Added getLinearBuffer function to StreamLinear_c
	- include devpropertyhandler_c (DeviceDescription handling) only in projects which use LOCAL Process Data
	- different font used for outputstrings in buttons to enable different scaling factors depending on the size of the button
	- iProcDataLocalSimpleSetpoint_c::init() and iProcDataLocalSimpleMeasure_c::init() bugfix
	- periodic SA request (about one minute period) for early detect of lost nodes on the BUS to get early cleanup of monitor list
	  ( this feature is only active, when the automatic deletion of stale ISO nodes is activated by <tt>\#define CONFIG_ISO_ITEM_MAX_AGE > 0</tt> )
	- Now supporting differentially scaled fontattributes in buttons
	- Changed Scaling to get more exact. removed 20bit fixpoint by factorM and factorD
	- Softkey child object positioning revised
	- fix useage of CAN last message object which is used to receive CAN messages while the normal message objects are reconfigured
	- give an ISOItem a second chance on a missed SA-Request; trigger periodic SA-Request every minute to get rid of stale entries in the monitor list
	- fix calculation of analog ADC voltage value to the correct formula given by ESX BIOS

\subsection Change_J 1.1.0 to 1.2.0

	- ISO<i><sub>AgLib</sub></i> is meanwhile used for several commercial projects, and more people are using it, so that
	  the overall quality is raised to a fairly well level
	- Vector-Informatik CAN card drivers can now be used with Dev-C++ due to new version of <b>their</b> driver (Please check Vector-Informatik
	  download page for details)
	- Process data communication is now update to the new ISO 11783 format
	- XML based definition of Device Description
	- creation of directly compileable Device Description with tool <b>proc2iso</b> which creates also the
	  class instantiations for all defined local process data, so that the list of construction parameters needn't be
		managed by hand
	- Upload of Device Description corresponding to current state of Task Controller standardization
	- fully functional support of Task Controller Client
	- Multi-Receive is now supported, so that Input Text fields can be used in Virtual Terminal masks without restriction
	- new Linux CAN HAL driver uses Linux kernel message queues for CAN communication between several local applications
	  with or without real CAN cards --> several applications can easily constitude a CAN BUS without any hardware
	- class GetyPos_c was renamed to DevKey_c to express the meaning for users who don't know DIN 9684
	- new HAl adaptations to further <b>STW</b> ECU types supported by users
	- proper support of NMEA2000 GPS strings
	- several enhancements regarding VT client and network management
	- XML-Schema pre-validation of vt2iso XML files
	- Softkey size can now also be specified (sk_width="..." sk_height="...", just like the datamask-size (dimension="...")
	- Adapted many items (timeouts, font-encoding, Positions now SIGNED integer) to FIRST EDITION of 11783-Part 6 (Virtual Terminal)
	- "vtKeyCodeESC" is now "vtKeyCodeACK"
	- vt2iso: Filename-parameter doesn't need "./" prefixed any more if XML file is in current directory
	- minor fixes in IsoTerminal_c's close(), changeNumericValue's reserved byte changed to 0xFF
	- NACK-recognition implemented (eventEnterSafeState), although it needs some more testing
	- reaction on language (change) PGN now possible via hook-function
	- old class Base_c is subdivided into smaller classes, so that a project can better select the wanted information types.
		This allows also the better maintenance of anonymous accessible parts (most of the features existing in pre-1.2.0 release)
		and special extansions, that is only possible by personal access. Please contact  <a href="mailto:Achim.Spangler_at_osb-ag:de">Achim Spangler</a>
		to gain access to the extension parts.

\subsection Change_I 1.0.0 to 1.1.0

	- now using specific LAST CAN MESSAGE OBJECT of CAN controllers to store CAN messages
		during CAN reconfiguration process for later process ( avoid loss of messages )<br>
		this is important to receive the very early triggered <b>ISO 11783</b> command <b>Request for Claimed Addresses</b>
	- the script update_makefile.sh was extended to create also Microsoft Visual Studio VC++ version 6.0 DSP files;
		This needs the installation of STLport if VC6 is used, see \ref Vc6StlPort for more information.
	- provided automatic CAN CARD HW selection for Vector-Informatik CAN CARDs so that:
		- either all CAN channels of real CAN cards can be counted
		- or just the CAN channels of the special virtual CAN device can be counted ( if no real CAN card is connected )
	- add driver for <b>Sontheim CAN cards</b> ( tested only with CANLPT, but in theory designed according general API documentation, as all card
		differences are handled by the driver, <b>extract the files from the Sontheim API ZIP in the directory <i>C:\\Development\\Sontheim</i> if you want to
		use the tutorial project files without changes</b> )
	- adapted the check for new messages in Win32 CAN cards to RTE style
	- added basic language handling and AUX functions handling into ISO Terminal
	- added <b>ISO 11783 Virtual Terminal</b> connection management, so that the pool is automatically
		reloaded on reconnection ( changed terminal properties are regarded )
	- done several cleanups and additions to <b>ISO 11783 Virtual Terminal</b>
	- enhance documentation for feature setup files for individual projects and reorganize the existing files, to make them easier to understand
	- enable HTTPS access to the subversion repository, as some proxies might hinder WebDAV access, which is needed by Subversion/Apache2<br>
		so please try HTTPS access in case you have problems with accessing the repository, before you contact <a href="mailto:Achim.Spangler_at_osb-ag:de">Achim Spangler</a>
	- some cleanup of workarounds which are needed due to Tasking compiler faults - the STL of versions up to 7.56 have wrong includes
		( see file "include.cpp/algorithm" which includes "include.cpp/stl_algobase.h" which includes "string.h" into global namespace;
		  a C++ system header shall include C-Library functions into the "std::" namespace -> it should include <tt>\<cstring\></tt> instead;
			other compilers do this correct )
	- introduce config setting for project config to select HEAP allocation strategy:
		- either allocate chunks of items ( for Tasking: 40 items per chunk ) to avoid HEAP defragmentation and to avoid memory allocation runtime as long as no new chunk is
			needed, which doesn't happen for most use cases, as the chunk size is pretty big in relation to the awaited numbers of mostly smaller than 10 items
		- or directly call malloc on each item creation, which causes greater overhead per item ( linkage of all malloced blocks in HEAP, whereas the chunks have a
			pretty efficient organization structure ) and which can cause longer malloc execution time on each item creation ( can be important, if large amount
			of monitor list entries, several measurement programs, setpoints occure, or if CAN filter setting must be reconfigured due to configuration change )
		- <b>PREFER CHUNK ALLOCATION AS LONG AS HEAP OVERHEAD IS ACCEPTIBLE, USE OTHER METHOD ONLY FOR RESTRICTED HEAP MEM CONDITIONS</b>
	- avoid allocation of HEAP for elements of temporal IsoAgLib::ManageMeasureProgLocal_c instances ( create default IsoAgLib::MeasureProgLocal_c instances on first real access )
	- optimize HEAP memory item size debug messages, so that real HEAP usage is reflected ( including overhead due to memory block linking in HEAP )<br>
			Thanks to the help of Tasking support ( information on simple integration of _malloc.c into EDE projects )
	- change <b>update_makefile.sh</b> shell script to avoid calls to <b>perl</b> functions, as these are only part of standard LINUX systems, and are <b>not</b>
		part of <b>MSYS</b> system ; additionally replace UNIX style directory seperation from slash to backslash for Win32 compilers and use Windows stly newline
	- change device types and CAN channels of tutorial examples, so that e.g. 1_0_ReadIso.cpp and 1_2_WriteIso.cpp can interact ( <b>a)</b> different device types
		for both ECUs and <b>b)</b> different CAN channels so that two channels of one PC CAN card can be connected )
	- unify number intervals of CAN HAL for BUS and MsgObj numbers to start with <b>0</b> for each type of HAL ( avoid HAL dependent offset constants ).
	- change default path for Win32 CAN card manufacturer driver library files ( API DLLs and Headers ) to <i>C:\\Development</i> so that all users can install their
		driver files to the corresponding location, if they want to avoid changing all default VC++ project files ( if pathes like <i>C:\\Development\\CANLIB</i> are still
		not acceptable, update_makefile.sh can be used to create VC++ DSP files based on adapted conf_x_y project feature setup files )
	- fix bug in handling of counter input, which prevented ESX BIOS counting functions from correct work ( these functions work only if now application IRQ handler is specified )
	- fix bug in handling of PWM output diagnose ( the state detection didn't work right ) and move this diagnose function in new
		ESX HAL file actor_target_extensions.cpp
	- add note on selection of right Vector-Informatik CAN card driver ( the "XL Driver Library" is not coupled to the "XL" CAN cards;
		you can use a XL CAN card with the CANLIB driver API also - this is the case for all users the maintainers know to date --> vector_canlib is
		the right selection in the conf_foo feature setup files )

\subsection Change_H 1.0.0rc5 to 1.0.0

	- implemented all virtual terminal object types, which are defined in ISO 11783 ( thanks to Brad Cox )
	- implemented simple access function for easy change control of Vt-Object attributes like colour

\subsection Change_G 1.0.0rc4 to 1.0.0rc5

	- added trigger request for claimed address as soon as local Ident is initialized as ISO 11783
		( avoid <DeviceType, DeviceTypeInst> clash in IsoAgLib::IsoMonitor_c )
	- implemented GPS decoding for ISO 11783 based on open accessible sources ( thanks to google )
		( please test and send changes, in case a reference system reveals wrong decoding;
			decoding of Longituge and Latitude are most probably correct, others?? )
			- CAN ID 0x00FFF3LU with GPS_STATE_PGN -> probably the GPS mode is in BYTE1???
			- CAN ID 0x00FEF3LU with GPS_LATITUDE_LONGITUDE_PGN -> a google'd example shows positioning and unit of latitude and longitude
			- CAN ID 0x00FEE8LU with GPS_SPEED_HEADING_ALTITUDE_PGN -> probably last 4 Bytes contain altitude
	- extended definition possibilities for application sources in project building script <b>update_makefile.sh</b>
	- fixed bug in vt2iso.cpp which prevented it creating bitmap arrays for the 480 resolution
	- fixed bug in FreeImage library handling, which places Y scanlines upsidedown in relation to
		"usual" graphic algorithms -> thus the bitmaps were flipped vertically

\subsection Change_F 1.0.0rc3 to 1.0.0rc4

	- reordered main documentation blocks
	- changed device type of virtual terminal example to tillage so that
		conflicts with the tractor instance of CANoe are avoided

\subsection Change_E 1.0.0rc2 to 1.0.0rc3

	- added support for Vector Informatik CAN driver libraries <b>CANLIB</b> and <b>XL Driver Library</b>
		( integrate it in the project generation script, so that a Dev-C++ project can be simply created )
	- made management of Master Working Set state of a local IsoAgLib::IdentItem_c ( representing of local ISO 11783
		node in the library ) more robust against SA and Device Type conflicts
	- enhanced some documentation
	- fixed some small problems in interaction with CANoe virtual terminal ( thanks to Brad Cox )

\subsection Change_D 1.0.0rc1 to 1.0.0rc2

	- added several features to the project generation script to create project
		files for the Open Source Win32 IDE "Dev-C++" and for the Tasking EDE
	- enhanced documentation ( esp. Getting Started Guide, extended HTML links in examples
		to demonstrated features )
	- renamed all usages of "Announce" to the more standard conformant "Address Claim" and
		change "DPlus" to "CanEn" to make ISO<i><sub>AgLib</sub></i> terms easier to understand
	- enhanced overall integration into Win32 ( thanks to the help of Brad Cox )
	- integrated the virtual terminal mask handling tool <b>vt2iso</b> to Win32 build
		with Dev-C++ ( added alternative image manipulation library usage for <b>Free Image</b> )

\subsection Change_C 0.2.1 to 1.0.0rc1

	- reorganization of source files
	- ISO 11783 at larger extend:
	    - working set messages
			- virtual terminal
			- process data state of Spring 2003
			- some bugs of first ISO approach fixed
	- extended documentation with several examples and diagrams
	- global access to central service classes to avoid complicated access through several steps
	- reduced usage of heap memory
	- reorganized error handling
	- better integration in time schedule of application, as main function for periodic actions of ISO<i><sub>AgLib</sub></i> allows
	    now to define a final time of return, where ISO<i><sub>AgLib</sub></i> returns at latest to the application
	- smarter structure of namespaces
	- several variants of process data, to restrict resource usage to needed level by selection of process data
	    type, which provides exactly the needed features
	- simple integration of process data and local identity variables within the program scope -> better control of memory and activation

\subsection Change_B 0.2.0 to 0.2.1

	- corrected some small errors of synchronisation between working 0.1.0 tree and the new 0.2.0
	- fixed bug in process data list management

\subsection Change_A 0.1.0 to 0.2.0

	- optional basic set of <b>ISO 11783</b> features
	- possibility of baud rate auto sensing on power up and on BUS OFF errors (with configurable wait time).
	- partitioning of sources in different packages. A base package contains system management, base tractor information
			and CAN driver. All optional modules like process data or EEPROM driver can now
			be downloaded as separate source archives.
	- ISO<i><sub>AgLib</sub></i> specific CAN driver module to ease hardware adaptation
	- collection of all files which must be edited for hardware adaptation to one directory and reduction of the amount
			of affected files

*/


