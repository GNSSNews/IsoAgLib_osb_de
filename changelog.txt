/*! \page PageChanges Changelog of IsoAgLib


INCLUDE_mainHeaderWithNavbar.txt_INCLUDE

\section IndexChanges Changes
\subsection Change_A 0.1.0 to 0.2.0

	- optional basic set of <b>ISO 11783</b> features
	- possibility of baud rate auto sensing on power up and on BUS OFF errors (with configurable wait time).
	- partitioning of sources in different packages. A base package contains system management, base tractor information
			and CAN driver. All optional modules like process data or EEPROM driver can now
			be downloaded as separate source archives.
	- ISO<i><sub>AgLib</sub></i> specific CAN driver module to ease hardware adoption
	- collection of all files which must be edited for hardware adoption to one directory and reduction of the amount
			of affected files

\subsection Change_B 0.2.0 to 0.2.1

	- corrected some small errors of synchronisation between working 0.1.0 tree and the new 0.2.0
	- fixed bug in process data list management

\subsection Change_C 0.2.1 to 1.0.0rc1

	- reorganization of source files
	- ISO 11783 at larger extend:
	    - working set messages
			- virtual terminal
			- process data state of Spring 2003
			- some bugs of first ISO approach fixed
	- extended documentation with several examples and diagrams
	- global access to central service classes to avoid complicated access through several steps
	- reduced usage of heap memory
	- reorganized error handling
	- better integration in time schedule of application, as main function for periodic actions of ISO<i><sub>AgLib</sub></i> allows
	    now to define a final time of return, where ISO<i><sub>AgLib</sub></i> returns at latest to the application
	- smarter structure of namespaces
	- several variants of process data, to restrict resource usage to needed level by selection of process data
	    type, which provides exactly the needed features
	- simple integration of process data and local identity variables within the program scope -> better control of memory and activation

\subsection Change_D 1.0.0rc1 to 1.0.0rc2

	- added several features to the project generation script to create project
		files for the Open Source Win32 IDE "Dev-C++" and for the Tasking EDE
	- enhanced documentation ( esp. Getting Started Guide, extended HTML links in examples
		to demonstrated features )
	- renamed all usages of "Announce" to the more standard conformant "Address Claim" and
		change "DPlus" to "CanEn" to make ISO<i><sub>AgLib</sub></i> terms easier to understand
	- enhanced overall integration into Win32 ( thanks to the help of Brad Cox )
	- integrated the virtual terminal mask handling tool <b>vt2iso</b> to Win32 build
		with Dev-C++ ( added alternative image manipulation library usage for <b>Free Image</b> )

\subsection Change_E 1.0.0rc2 to 1.0.0rc3

	- added support for Vector Informatik CAN driver libraries <b>CANLIB</b> and <b>XL Driver Library</b>
		( integrate it in the project generation script, so that a Dev-C++ project can be simply created )
	- made management of Master Working Set state of a local IsoAgLib::IdentItem_c ( representing of local ISO 11783
		node in the library ) more robust against SA and Device Type conflicts
	- enhanced some documentation
	- fixed some small problems in interaction with CANoe virtual terminal ( thanks to Brad Cox )

\subsection Change_F 1.0.0rc3 to 1.0.0rc4

	- reordered main documentation blocks
	- changed device type of virtual terminal example to tillage so that
		conflicts with the tractor instance of CANoe are avoided

\subsection Change_G 1.0.0rc4 to 1.0.0rc5

	- added trigger request for claimed address as soon as local Ident is initialized as ISO 11783
		( avoid <DeviceType, DeviceTypeInst> clash in IsoAgLib::IsoMonitor_c )
	- implemented GPS decoding for ISO 11783 based on open accessible sources ( thanks to google )
		( please test and send changes, in case a reference system reveals wrong decoding;
			decoding of Longituge and Latitude are most probably correct, others?? )
			- CAN ID 0x00FFF3LU with GPS_STATE_PGN -> probably the GPS mode is in BYTE1???
			- CAN ID 0x00FEF3LU with GPS_LATITUDE_LONGITUDE_PGN -> a google'd example shows positioning and unit of latitude and longitude
			- CAN ID 0x00FEE8LU with GPS_SPEED_HEADING_ALTITUDE_PGN -> probably last 4 Bytes contain altitude
	- extended definition possibilities for application sources in project building script <b>update_makefile.sh</b>
	- fixed bug in vt2iso.cpp which prevented it creating bitmap arrays for the 480 resolution
	- fixed bug in FreeImage library handling, which places Y scanlines upsidedown in relation to
		"usual" graphic algorithms -> thus the bitmaps were flipped vertically

\subsection Change_H 1.0.0rc5 to 1.0.0

	- implemented all virtual terminal object types, which are defined in ISO 11783 ( thanks to Brad Cox )
	- implemented simple access function for easy change control of Vt-Object attributes like colour

\subsection Change_I 1.0.0 to 1.1.0

	- now using specific LAST CAN MESSAGE OBJECT of CAN controllers to store CAN messages
		during CAN reconfiguration process for later process ( avoid loss of messages )<br>
		this is important to receive the very early triggered <b>ISO 11783</b> command <b>Request for Claimed Addresses</b>
	- the script update_makefile.sh was extended to create also Microsoft Visual Studio VC++ version 6.0 DSP files;
		This needs the installation of STLport if VC6 is used, see \ref Vc6StlPort for more information.
	- provided automatic CAN CARD HW selection for Vector-Informatik CAN CARDs so that:
		- either all CAN channels of real CAN cards can be counted
		- or just the CAN channels of the special virtual CAN device can be counted ( if no real CAN card is connected )
	- add driver for <b>Sontheim CAN cards</b> ( tested only with CANLPT, but in theory designed according general API documentation, as all card
		differences are handled by the driver, <b>extract the files from the Sontheim API ZIP in the directory <i>C:\\Development\\Sontheim</i> if you want to
		use the tutorial project files without changes</b> )
	- adopted the check for new messages in Win32 CAN cards to RTE style
	- added basic language handling and AUX functions handling into ISO Terminal
	- added <b>ISO 11783 Virtual Terminal</b> connection management, so that the pool is automatically
		reloaded on reconnection ( changed terminal properties are regarded )
	- done several cleanups and additions to <b>ISO 11783 Virtual Terminal</b>
	- enhance documentation for feature setup files for individual projects and reorganize the existing files, to make them easier to understand
	- enable HTTPS access to the subversion repository, as some proxies might hinder WebDAV access, which is needed by Subversion/Apache2<br>
		so please try HTTPS access in case you have problems with accessing the repository, before you contact <a href="mailto:Achim.Spangler@osb-ag:de">Achim Spangler</a>
	- some cleanup of workarounds which are needed due to Tasking compiler faults - the STL of versions up to 7.56 have wrong includes
		( see file "include.cpp/algorithm" which includes "include.cpp/stl_algobase.h" which includes "string.h" into global namespace;
		  a C++ system header shall include C-Library functions into the "std::" namespace -> it should include <cstring> instead;
			other compilers do this correct )
	- introduce config setting for project config to select HEAP allocation strategy:
		- either allocate chunks of items ( for Tasking: 40 items per chunk ) to avoid HEAP defragmentation and to avoid memory allocation runtime as long as no new chunk is
			needed, which doesn't happen for most use cases, as the chunk size is pretty big in relation to the awaited numbers of mostly smaller than 10 items
		- or directly call malloc on each item creation, which causes greater overhead per item ( linkage of all malloced blocks in HEAP, whereas the chunks have a
			pretty efficient organization structure ) and which can cause longer malloc execution time on each item creation ( can be important, if large amount
			of monitor list entries, several measurement programs, setpoints occure, or if CAN filter setting must be reconfigured due to configuration change )
		- <b>PREFER CHUNK ALLOCATION AS LONG AS HEAP OVERHEAD IS ACCEPTIBLE, USE OTHER METHOD ONLY FOR RESTRICTED HEAP MEM CONDITIONS</b>
	- avoid allocation of HEAP for elements of temporal IsoAgLib::ManageMeasureProgLocal_c instances ( create default IsoAgLib::MeasureProgLocal_c instances on first real access )
	- optimize HEAP memory item size debug messages, so that real HEAP usage is reflected ( including overhead due to memory block linking in HEAP )<br>
			Thanks to the help of Tasking support ( information on simple integration of _malloc.c into EDE projects )
	- change <b>update_makefile.sh</b> shell script to avoid calls to <b>perl</b> functions, as these are only part of standard LINUX systems, and are <b>not</b>
		part of <b>MSYS</b> system ; additionally replace UNIX style directory seperation from slash to backslash for Win32 compilers and use Windows stly newline
	- change device types and CAN channels of tutorial examples, so that e.g. 1_0_ReadIso.cpp and 1_2_WriteIso.cpp can interact ( <b>a)</b> different device types
		for both ECUs and <b>b)</b> different CAN channels so that two channels of one PC CAN card can be connected )
	- unify number intervals of CAN HAL for BUS and MsgObj numbers to start with <b>0</b> for each type of HAL ( avoid HAL dependent offset constants ).
	- change default path for Win32 CAN card manufacturer driver library files ( API DLLs and Headers ) to <i>C:\\Development</i> so that all users can install their
		driver files to the corresponding location, if they want to avoid changing all default VC++ project files ( if pathes like <i>C:\\Development\\CANLIB</i> are still
		not acceptable, update_makefile.sh can be used to create VC++ DSP files based on adopted conf_x_y project feature setup files )
	- fix bug in handling of counter input, which prevented ESX BIOS counting functions from correct work ( these functions work only if now application IRQ handler is specified )
	- fix bug in handling of PWM output diagnose ( the state detection didn't work right ) and move this diagnose function in new
		ESX HAL file actor_target_extensions.cpp
	- add note on selection of right Vector-Informatik CAN card driver ( the "XL Driver Library" is not coupled to the "XL" CAN cards;
		you can use a XL CAN card with the CANLIB driver API also - this is the case for all users the maintainers know to date --> vector_canlib is
		the right selection in the conf_foo feature setup files )

\subsection Change_J 1.1.0 to 1.2.0

	- ISO<i><sub>AgLib</sub></i> is meanwhile used for several commercial projects, and more people are using it, so that
	  the overall quality is raised to a fairly well level
	- Vector-Informatik CAN card drivers can now be used with Dev-C++ due to new version of <b>their</b> driver (Please check Vector-Informatik
	  download page for details)
	- Process data communication is now update to the new ISO 11783 format
	- XML based definition of Device Description
	- creation of directly compileable Device Description with tool <b>proc2iso</b> which creates also the
	  class instantiations for all defined local process data, so that the list of construction parameters needn't be
		managed by hand
	- Upload of Device Description corresponding to current state of Task Controller standardization
	- fully functional support of Task Controller Client
	- Multi-Receive is now supported, so that Input Text fields can be used in Virtual Terminal masks without restriction
	- new Linux CAN HAL driver uses Linux kernel message queues for CAN communication between several local applications
	  with or without real CAN cards --> several applications can easily constitude a CAN BUS without any hardware
	- class GetyPos_c was renamed to DevKey_c to express the meaning for users who don't know DIN 9684
	- new HAl adoptions to further <b>STW</b> ECU types supported by users
	- proper support of NMEA2000 GPS strings
	- several enhancements regarding VT client and network management
	- XML-Schema pre-validation of vt2iso XML files
	- Softkey size can now also be specified (sk_width="..." sk_height="...", just like the datamask-size (dimension="...")
	- Adapted many items (timeouts, font-encoding, Positions now SIGNED integer) to FIRST EDITION of 11783-Part 6 (Virtual Terminal)
	- "vtKeyCodeESC" is now "vtKeyCodeACK"
	- vt2iso: Filename-parameter doesn't need "./" prefixed any more if XML file is in current directory
	- minor fixes in ISOTerminal_c's close(), changeNumericValue's reserved byte changed to 0xFF
	- NACK-recognition implemented (eventEnterSafeState), although it needs some more testing
	- reaction on language (change) PGN now possible via hook-function
	- old class Base_c is subdivided into smaller classes, so that a project can better select the wanted information types.
		This allows also the better maintenance of anonymous accessible parts (most of the features existing in pre-1.2.0 release)
		and special extansions, that is only possible by personal access. Please contact  <a href="mailto:Achim.Spangler@osb-ag:de">Achim Spangler</a>
		to gain access to the extension parts.



*/


